{"version":3,"sources":["compileAngularTemplates/plugin/handler.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,G;AACA,kC;AACA,G;;AAEA,iD;AACA,yC;AACA,mB;AACA,qB;AACA,0B;AACA,qD;;AAEA,oE;AACA,oC;;AAEA,0D;AACA,6H;AACA,qH;AACA,8C;AACA,gF;;AAEA,0G;AACA,oF;AACA,0F;AACA,sE;AACA,oF;AACA,0D;AACA,8G;AACA,uC;AACA,kC;AACA,oC;AACA,wB;AACA,yB;AACA,6C;AACA,kB;AACA,W;;AAEA,6B;AACA,yC;AACA,mB;AACA,sC;AACA,K;AACA,G","file":"/packages/compileAngularTemplates_plugin.js","sourcesContent":["/**\n * Created by netanel on 01/01/15.\n */\n\nvar minify = Npm.require('html-minifier').minify;\nPlugin.registerSourceHandler('ng.html', {\n  isTemplate: true,\n  archMatching: \"web\"\n}, function(compileStep) {\n  var contents = compileStep.read().toString('utf8');\n\n  // Just parse the html to make sure it is correct before minifying\n  HTMLTools.parseFragment(contents);\n\n  // Build the templateCache prefix using the package name\n  // In case the template is not from a package but the user's app there will be no prefix - client/views/my-template.ng.html\n  // In case the template came from a package the prefix will be - my-app_my-package_client/views/my-template.ng.html\n  var packagePrefix = compileStep.packageName;\n  packagePrefix = packagePrefix ? (packagePrefix.replace(/:/g, '_') + '_') : '';\n\n  var results = 'angular.module(\\'angular-meteor\\').run([\\'$templateCache\\', function($templateCache) {' +\n    // Since compileStep.inputPath uses backslashes on Windows, we need replace them\n    // with forward slashes to be able to consistently include templates across platforms.\n    // Ticket here: https://github.com/Urigo/angular-meteor/issues/169\n    // A standardized solution to this problem might be on its way, see this ticket:\n    // https://github.com/meteor/windows-preview/issues/47\n    '$templateCache.put(' + JSON.stringify(packagePrefix + compileStep.inputPath.replace(/\\\\/g, \"/\")) + ', ' +\n      JSON.stringify(minify(contents, {\n        collapseWhitespace : true,\n        conservativeCollapse : true,\n        minifyJS : true,\n        minifyCSS : true,\n        processScripts : ['text/ng-template']\n      })) + ');' +\n    '}]);';\n\n  compileStep.addJavaScript({\n    path : compileStep.inputPath + '.js',\n    data : results,\n    sourcePath : compileStep.inputPath\n  });\n});\n"]}